In this project we include Hibernate by pom.xml , and with Spring. 
We config it with annotations in the code. 

In the application properties U can define it with some options : 

spring.jpa.hibernate.ddl-auto= create-drop / create / update /  none :
https://stackoverflow.com/a/42147995/9727918

create – Hibernate first drops existing tables, then creates new tables
update – the object model created based on the mappings (annotations or XML) is compared with the existing schema, and then Hibernate updates the schema according to the diff. It never deletes the existing tables or columns even if they are no more required by the application
create-drop – similar to create, with the addition that Hibernate will drop the database after all operations are completed. Typically used for unit testing
validate – Hibernate only validates whether the tables and columns exist, otherwise it throws an exception
none – this value effectively turns off the DDL generation

U can test it by the platyin in adding or removing or changing object fields. 
Anyway the way to work is or create - for seeing the new trying or update to see changes and adding . . 


***Insert Object in the other object ***

See how I am trying to add  simple eventProperty object in the socialevent / 

I am getting : 

" Could not determine type for: com.lingar.SocialEvents.entities.EventProperty, at table: social_event, for columns: 
[org.hibernate.mapping.Column(event_property)]"

Did what  he said here : 
https://stackoverflow.com/q/44475949/9727918

And now getting other error : 
Caused by: org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: 
object references an unsaved transient instance -
 save the transient instance before flushing :
  com.lingar.SocialEvents.entities.SocialEvent.eventProperty -> com.lingar.SocialEvents.entities.EventProperty;
   nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.lingar.SocialEvents.entities.SocialEvent.eventProperty -> com.lingar.SocialEvents.entities.EventProperty

   
   have done with embedded and now it's generate other problem : 
    component property not found: eventPropertyId
    
    
    
Problems with the nested objects : 

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' 
defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]:
 Invocation of init method failed; nested exception is org.hibernate.MappingException:
  component property not found: eventPropertyId
  
  
  Ok After removing the @Entity it's work. U can't make them both. 
  But this is example to "Embedded" that mean the object will inserted as more columns , so u need to define it "Join Table", 
  as U can see in social 
  event. 
  
  BUT I want to know how to create it as seperate entity. 
  And U gonna do it on the next time. 
  
  U here 
  
  - First - pass by the old documnet and project about hibernate, and understand it. - All it unorganized and need a diving. Now it's the ordered 
  Summary. 
  - Second - Do new Object that will serve properly as other entity. Do abstract or any other thing U need. 
  
  Search for "Spring Hibernate nested Entities" -- For beginning. 
  
  SUccess. Was need @oneToOne and CasadeType - for the saving.
  
   But the table is corrupted. I want it not insert to the social-event table - Not it's just look becaue the table is big. 
   
   But U need to think what do u want. What is the right way to do it. 
   
   Simplicity 
   
   And I think that if u do it from outside it problem U need to casade it. 
   
   Ok greate it's working well . 
   
   Now let's try it with two children. On of special Array Strings, and one of simple string.
   
   
   Going forward. 
   
   Now i am trying to make list inside the property 
   
   cannot simultaneously fetch multiple bags: [com.lingar.SocialEvents.entities.SocialEvent.myArray, com.lingar.SocialEvents.entities.EventMultipleProperty.propsList]
  
  U here
  
  Ok We success many things today. 
  Next u need to replan the DB structure, and oop way things working. 
  
  U must make it the most simple u can . 
  In the next Versions U will get it better. Now U work on many things together - the app itself, SQL technique and Hibernate
  So U need to make it simple.
  
  U don't need to feel bad about that. That's the way person study. U can't jump to level 10 in one time. 
  So birth some air and relax. 
  
  
  